---
title: "Fundamentos de estatística em R"
subtitle: "Semana 2"
author: "Bruno Montezano"
institute: "Programa de Pós-Graduação em Psiquiatria e Ciências do Comportamento\nUniversidade Federal do Rio Grande do Sul"
date: last-modified
date-format: long
lang: pt-br
execute:
  echo: true
format:
  revealjs:
    incremental: true
    theme: [default, ../assets/custom.scss]
    logo: "../assets/logo_ufrgs.png"
---

## Conteúdo de hoje

- Revisão de conceitos matemáticos
  - Variáveis, vetores e matrizes
  - Medidas de tendência central e dispersão

- Programação
  - Indexação e subconjuntos
  - Expressões lógicas
  
## Revisão de conceitos matemáticos

![](../assets/meme_revisao_matematica.jpg){fig-align="center" width=45%}

## Variáveis {.smaller}

**Variáveis** são símbolos que representam conjuntos de um ou mais **elementos**
que podem assumir qualquer quantidade de valores.

::: {.nonincremental}
- Letras como $x$, $y$ e $z$ são comumente usadas para indicar variáveis
  - Por exemplo: $x = 3$
:::

. . .

::: {.nonincremental}
- Letras maiúsculas ($X$) ou letras com um índice ($x_i$) referem-se a variáveis
com múltiplos valores — ou seja, com dimensões
  - Por exemplo: $X = x_i = (15, 16, 32)$
  - Variáveis com uma dimensão (comprimento) são chamadas de **vetor**
:::

. . .

::: {.nonincremental}
- Variáveis como $x_i$ são usadas para **indexar** elementos de vetores
  - $i$ é uma variável que indica a posição indexada
  - Por exemplo: $x_1 = 15, x_2 = 16, x_3 = 32$
:::

## Vetores em R

```{r vetor_xi}
x <- c(15, 16, 32) # Cria x, um vetor de comprimento 3
x
```

. . .

Indexando $x_3$:

```{r indexando_x3}
x[3] # Retorna o terceiro elemento de x
```

. . .

Nós podemos indexar vários elementos de uma vez.

Indexar $x_1$ e $x_3$:

```{r indexar-multiplos-elementos}
x[c(1, 3)] # Retorna o primeiro e o terceiro elemento de x
```

## Matrizes {.smaller}

**Matrizes** são uma tabela retangular de números. Geralmente, elas são identificadas
por uma letra maiúscula, como $X$.

$$X_{i,j} = \begin{bmatrix}x_{1,1} & x_{1,2}\\x_{2,1} & x_{2,2}\end{bmatrix}$$

Matrizes são indexadas com subscritos para *linhas, colunas* (ou seja, $x_{ij}$).

. . .

$$X = \begin{bmatrix}9 & 25\\14 & 76\end{bmatrix} \;\;\; x_{2,1} = 14$$

&nbsp;

. . .

$$X = \begin{bmatrix}5 & 9 & 8\\3 & 2 & 5\\0 & 1 & 4\end{bmatrix} \;\;\; \text{Qual o elemento } x_{3,2}?$$

## Matrizes em R {.smaller}

```{r criar-matriz-X}
X <- matrix(c(5, 9, 8, 3, 2, 5, 0, 1, 4), nrow = 3, byrow = TRUE)
X
```

Percebam que o R nos mostra os índices nas margens para facilitar a indexação.

. . .

```{r resposta-matriz}
X[3, 2] # Terceira linha, segunda coluna
```

. . .

Também podemos pegar vários elementos da matriz (e alterar a ordem):

```{r multiplos-elementos-matriz}
X[3, c(2, 1)]
```

## Somatório {.smaller}

$$\sum_{i=1}^{n}x_i$$

<center>"Soma de todos os valores de $x$ do primeiro ($i = 1$) até o último ($n$)"</center>

. . .

&nbsp;

Dado $x = [9, 12, 12, 14, 27]$:

$$\sum_{i=1}^{n}x_i = x_1 + x_2 + x_3 + x_4 + x_5 = 9 + 12 + 12 + 14 + 27 = 74$$

. . .

```{r soma-x}
x <- c(9, 12, 12, 14, 27)
sum(x)
```

É comum ao somar todos os elementos de um vetor, omitirmos os sobrescritos e subscritos,
por exemplo: $\sum x_i = \sum_{i=1}^{n}x_i$

## Medidas de tendência central

![](../assets/meme_medidas_tendencia_central.jpg){fig-align="center" width=85%}

## Média {.smaller}

A média (aritmética) é o *valor esperado* de uma variável.

$$\bar{x} = \frac{1}{n}\sum_{i=1}^{n}x_{i}$$

. . .

Se você extrair elementos aleatoriamente dessa variável, a média seria o chute menos errado
que você poderia fazer sobre esse valor^[Tecnicamente, a média
minimiza o *erro quadrático*.].

Dito de outra forma, as diferenças positivas e negativas entre todos os valores e a média 
equivalem entre si.

. . .

```{r calcular-media-na-mao}
(1/length(x)) * sum(x) # Fórmula da média aritmética
```

```{r calcular-media-funcao-mean}
mean(x) # Função mean() é como se fosse um atalho
```

## Mediana {.smaller}

O valor para o qual não mais da metade dos
valores é superior ou inferior^[Tecnicamente, a mediana minimiza o erro absoluto].

. . .

A **mediana** tem essa fórmula esquisita:

$$m(x_i) = \begin{cases} x_{\frac{n+1}{2}},& \text{se } n \text{ ímpar}\\ \frac{1}{2}(x_{\frac{n}{2}} + x_{\frac{n}{2} + 1}), &\text{se } n \text{ par}\end{cases}$$

<center>"Se $x$ tem um número ímpar de elementos, ao colocá-los em ordem, a mediana é o valor do meio. Se $x$ tem um número par de elementos, a mediana é a média dos dois valores do meio".</center>

. . .

&nbsp;

```{r mediana-na-mao}
sort(x)[(length(x) + 1) / 2] # Mediana na mão quando n é ímpar
```

```{r funcao-median}
median(x) # Função median() para calcular qualquer mediana
```

## Moda {.smaller}

A **moda** é o valor mais **frequente** na variável.

. . .

Existem fórmulas para a moda, mas elas não são nada intuitivas, apesar da moda
ser a medida de tendência central mais intuitiva.

. . .

Vocês podem usar `table()` para ver a frequência de valores:

```{r funcao-table}
table(x)
```

. . .

E vocês podem achar a moda diretamente:

```{r achar-moda}
table(x)[table(x) == max(table(x))]
```

O código acima se traduz como: "Crie um subconjunto da tabela para quando a contagem for igual ao maior valor."

## Valores extremos

A média é sensível a valores extremos:

```{r outliers}
z <- c(2, 5, 3, 5, 105)
mean(z)
```

. . .

A mediana não é:

```{r mediana-outlier}
median(z)
```

. . .

Isso significa que a mediana pode ser uma "média" mais útil quando os dados
têm valores extremos.


Isto é comum com variáveis como renda e números de episódios auto-relatados.

## Medidas de dispersão

![](../assets/meme_variancia.jpg){fig-align="center" width=65%}

## Variância {.smaller}

A variância mede como os dados estão dispersos em torno da média.
Normalmente usamos a variância *amostral*:

$$
s^2 = \frac{\sum (x_i - \bar{x})^2}{n - 1}
$$

Vamos ver isso melhor quando estudarmos distribuições.

. . .

```{r variancia-na-mao}
sum((x - mean(x))^2 / (length(x) - 1))
```

```{r funcao-var}
var(x)
```

. . .

Se todos os valores são iguais, a variância é *zero*.

## Desvio padrão {.smaller}

O desvio padrão ($s$ ou $sd$, ou $dp$ em português) é simplesmente a raíz quadrada
da variância:

$$s = sd = dp = \sqrt{s^2}$$

. . .

Você pode interpretar como a distância "típica" dos valores em relação à média.

. . .

```{r raiz-da-variancia}
sqrt(var(x))
```

```{r funcao-sd}
sd(x)
```

# Retomando indexação e subconjuntos

## Nomes para extrair colunas

Nós também podemos usar os nomes de colunas para selecioná-las na base:

```{r selecionar-coluna-por-nome}
head(iris[, c("Species", "Petal.Length")])
```

. . .

Por padrão, a função `head()` mostra as seis primeiras linhas da base.

## Colunas individuais {.smaller}

Se vocês criarem um subconjunto de apenas uma coluna, um vetor será retornado
ao invés de um dataframe:

```{r coluna-sozinha}
iris[, "Sepal.Width"]
```

. . .

*Colunas* em dataframes também podem ser acessadas usando os nomes e o operador
de extração `$`:

```{r usando-cifrao}
iris$Sepal.Width
```

## Extrair: `$`

Vocês podem ter notado o `$` antes ao ter usado o `str()`:

```{r str-iris}
str(iris)
```

Como nas margens das matrizes, trata-se de uma dica que você pode selecionar
colunas dessa forma.

## Combinando estilos de criar subconjuntos {.smaller}

```{r combinar-estilos}
iris$Petal.Width[1:15]
```

Aqui eu usei os colchetes para selecionar apenas as 15 primeiras observações dessa
coluna.

. . .

Nós podemos misturar os estilos de subconjuntos! Nesse exemplo, eu inseri apenas
um valor (sem índice de coluna) porque os **vetores** possuem *apenas uma
dimensão* (que é o comprimento).

- O R processa primeiro o `$Petal.Width`
- E depois processa o `[1:15]`

. . .

Se você receber erros sobre "número incorreto de dimensões", verifique por algum
erro no seu subconjunto!

# Praticando combinações de condições lógicas

## E: `&` {.smaller}

![](../assets/exemplo_e.png){fig-align="center" width=45%}

```{r operador-e}
iris[iris$Sepal.Length > 7.2 & iris$Petal.Length > 6.6, ]
```

## Ou: `|` {.smaller}

![](../assets/exemplo_ou.png){fig-align="center" width=45%}

```{r operador-ou}
iris[iris$Sepal.Length > 7.2 | iris$Petal.Length > 6.6, ]
```

## Tarefa de casa {.smaller}

- Criar um subconjunto da base `iris` apenas com as plantas da espécie `virginica` e
que possuam uma largura da pétala (`Petal.Width`) menor ou igual a 1,9cm.
Lembrem de usar os colchetes, operadores (`==`, `&`, `<=`), que o ponto de decimal do
R não é a vírgula (dica: é o `.`). Armazene esse subconjunto em um objeto chamado
`virginicas_estreitas`.

- A partir da base `iris`, calcule a média e o desvio padrão do comprimento da sépala
(`Sepal.Length`) das plantas da espécie
`versicolor`. Lembrem do `$` e das funções para calcular média e desvio padrão!
